// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract ParticipationCredit {
    // The contract owner (admin) address
    address public owner;

    // Mapping from student address to their credit count
    mapping(address => uint256) public   credits;

    // Modifier to restrict certain functions so only the owner can call them
    modifier onlyOwner() {
        require(msg.sender == owner, "Only admin can call this");
        _;
    }

    // deployer will be ownre
    constructor() {
        owner = msg.sender;
    }

    // only owner can grant credits and if he does thn Increment that student's credit balance by 1
    function grantCredit(address _student) external onlyOwner {
        
        credits[_student] += 1;
    }

    // to read a student credit balance by his address
    function getCredits(address _student) external view returns (uint256) {
        return credits[_student];
    }
}
